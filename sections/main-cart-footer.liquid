{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}

<div class="bt-container{% if cart == empty %} is-empty{% endif %}" id="main-cart-footer" data-id="{{ section.id }}">
  <div>
    <div class="cart__footer">
      <div class="cart-additional-note-wrap">
        <div class="cart-additional-wrap">
          <div class="cart-additional-field">
            <label for="Cart-note">{{ section.settings.assisted_title }}</label>
            <select form="cart" name="attributes[Trailer Parts Expert that assisted customer]">
              {%- assign options = section.settings.expert_assisted_you | split: "|"  -%}
              {% for option in options %}
              <option value="{{- option -}}">{{option }}</option>
              {% endfor %}
            </select>
          </div>
          <div class="cart-additional-field">
            <label for="Cart-note">{{ section.settings.findur_title }}</label>
            <select form="cart" name="attributes[{{ section.settings.findur_title }}]">
              {% assign second_options = section.settings.how_did_you_find_us | split: "|" %}
              {% for option in second_options %}
              <option value="{{- option -}}">{{option }}</option>
              {% endfor %}
            </select>
          </div>
        </div>
        {%- if settings.show_cart_note -%}
          <cart-note class="cart__note">
            <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
            <textarea class="text-area field__input" name="note" form="cart" id="Cart-note" placeholder="{{ 'sections.cart.note' | t }}">{{ cart.note }}</textarea>
          </cart-note>
        {%- endif -%}
      </div>
      <div class="cart__blocks">
        {% for block in section.blocks %}
          {%- case block.type -%}
            {%- when '@app' -%}
            <div {% if section.settings.css_id_selector != blank %}id="{{ section.settings.css_id_selector }}"{% endif %}>
              {% render block %}
            </div>
             {%- when 'custom_liquid' -%}
            {{ block.settings.custom_liquid }}
            {%- when 'subtotal' -%}
              <div class="js-contents" {{ block.shopify_attributes }}>
                <div class="totals">
                  <h2 class="totals__subtotal">{{ 'sections.cart.subtotal' | t }}</h2>
                  <span> </span>
                  <p class="totals__subtotal-value">{{ cart.total_price | money_with_currency }}</p>
                </div>

                <div>
                  {%- if cart.cart_level_discount_applications.size > 0 -%}
                    <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                      {%- for discount in cart.cart_level_discount_applications -%}
                        <li class="discounts__discount discounts__discount--position">
                          {%- render 'icon-discount' -%}
                          {{ discount.title }}
                          (-{{ discount.total_allocated_amount | money }})
                        </li>
                      {%- endfor -%}
                    </ul>
                  {%- endif -%}
                </div>

                <small class="tax-note caption-large rte">
                  {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                    {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                  {%- elsif cart.taxes_included -%}
                    {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
                  {%- elsif shop.shipping_policy.body != blank -%}
                    {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                  {%- else -%}
                    {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
                  {%- endif -%}
                </small>
              </div>
            {%- else -%}
              <div class="cart__ctas" {{ block.shopify_attributes }}>
                <noscript>
                  <button type="submit" class="cart__update-button button button--secondary" form="cart">
                    {{ 'sections.cart.update' | t }}
                  </button>
                </noscript>

                <button type="submit" id="checkout" class="cart__checkout-button custom-btn" name="checkout"{% if cart == empty %} disabled{% endif %} form="cart">
                  {{ 'sections.cart.checkout' | t }}
                </button>
              </div>

              {%- if additional_checkout_buttons -%}
                <div class="additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                </div>
              {%- endif -%}
          {%- endcase -%}
        {% endfor %}

        <div id="cart-errors"></div>
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return msie > 0 || trident > 0;
    }

    if (!isIE()) return;
    const cartSubmitInput = document.createElement('input');
    cartSubmitInput.setAttribute('name', 'checkout');
    cartSubmitInput.setAttribute('type', 'hidden');
    document.querySelector('#cart').appendChild(cartSubmitInput);
    document.querySelector('#checkout').addEventListener('click', function (event) {
      document.querySelector('#cart').submit();
    });
  });
</script>


<script>
(function () {
  // Function to attach the submit handler
  function attachSubmitHandler(form) {
    if (!form || form.dataset.preventListenerAttached) return;

    form.addEventListener("submit", function (event) {
      // Try to find the selected radio button, accounting for third-party behavior
      const radios = Array.from(form.querySelectorAll('input[name="radio-1"]'));
      const selected = radios.find(radio => radio.checked || radio.classList.contains('selected'));
      const selectedValue = selected?.value;

      if (selectedValue === "My organization is not tax exempt") {
        event.preventDefault();
        alert("Submission blocked: This form is only for tax-exempt organizations.");
      }
    });

    // Flag to prevent double-listening
    form.dataset.preventListenerAttached = "true";
  }

  // Use MutationObserver to wait until the form is in the DOM
  const observer = new MutationObserver((mutations, obs) => {
    const form = document.querySelector('form.g-container');
    if (form) {
      attachSubmitHandler(form);
      obs.disconnect(); // Stop observing once found
    }
  });

  // Start observing the body for changes
  observer.observe(document.body, {
    childList: true,
    subtree: true,
  });

  // Just in case the form is already there when the script runs
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector('form.g-container');
    if (form) {
      attachSubmitHandler(form);
      observer.disconnect();
    }
  });
})();
</script>





{% schema %}
{
  "name": "t:sections.main-cart-footer.name",
  "class": "cart__footer-wrapper",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_cart_note",
      "default": false,
      "label": "t:sections.main-cart-footer.settings.show_cart_note.label"
    },
	{
		"type":"header",
		"content":"Expert Assisted You"
	},
	{
		"type":"text",
		"id":"assisted_title",
		"label":"Add Field Title"
	},
	{
      "type":"text",
      "id":"expert_assisted_you",
      "label":"Add Expert Assisted Name",
      "info" : "Please add | to sperate Name"
	},
	{
		"type":"header",
		"content":"How Did You Find Us?"
	},
	{
		"type":"text",
		"id":"findur_title",
		"label":"Add Field Title"
	},
	{
      "type":"text",
      "id":"how_did_you_find_us",
      "label":"How Did You Find Us?",
      "info" : "Please add | to sperate Name"
	}
  ],
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1
    },
    {
      "type": "@app"
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    }
  ]
}
{% endschema %}
