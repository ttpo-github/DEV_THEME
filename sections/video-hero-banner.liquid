{%- assign section_id = 'custom-hero-section-' | append: section.id -%}

<div id="{{ section_id }}" class="custom-hero-section">
  <video id="heroVideo" loop muted autoplay>
    <source src="{{ section.settings.video_source }}" type="video/mp4">
    Your browser does not support the video tag.
  </video>

  <div class="hero-content">
    <div class="hero-header">
      <input type="text" placeholder="{{ section.settings.header_input_placeholder }}" class="header-input">
      <div class="play-button" onclick="openVideoModal()">
        <img src="https://cdn.shopify.com/s/files/1/0052/2941/2425/files/play-button.jpg?v=1702307252" alt="Play Button" width='100px' height='100px'>
      </div>
      <div class="cta-buttons">
        <a href="{{ section.settings.cta_button_1_href }}" class="cta-button">{{ section.settings.cta_button_1_text }}</a>
        <a href="{{ section.settings.cta_button_2_href }}" class="cta-button">{{ section.settings.cta_button_2_text }}</a>
      </div>
    </div>
  </div>

  <div id="video-modal" class="video-modal">
   <div class="video-modal-container">
    <span class="close-modal close" onclick="closeVideoModal()">X</span>
    <video class="modal-video" loop controls autoplay="1" onload="playVideoModal()">
      
      <source src="{{ section.settings.video_source }}" type="video/mp4">
      Your browser does not support the video tag.
    </video>
   </div>
  </div>


  
</div>




<style>
  /* Add your custom styling here */

  #{{ section_id }} {
    position: relative;
    overflow: hidden;
  }

  #heroVideo, .modal-video {
    width: 100%;
    
    object-fit: cover;
    height: {{ section.settings.height_adjustment }}px; /* Adjust the height here */
  }

  


  .hero-content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 2;
  }

  .hero-header {
    text-align: center;
    color: #fff; /* Change as needed */
  }

  .header-input {
    margin-bottom: 10px;
  }

  .play-button {
    cursor: pointer;
  }

  .cta-buttons {
    display: flex;
    justify-content: space-between;
  }

 
  /* Video Modal Styles */
  .video-modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform:translate(0%, 100%);
    transform-origin: center center;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 20;
    opacity:0;
    transition: transform 3s ease-in-out, opacity 3s ease-in-out;
  }

  .video-modal.open {
    display: block;
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  .modal-video {
    width: 100%;
    height: 100%;
    /*margin: 10% auto;*/
    display: block;
    
  }

  .video-modal-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform:translate(-100%, -100%) scale(0);
    opacity:0;
    transition: transform 3s ease-in-out, opacity 3s ease-in-out;
    width: 75%;
    height: auto;
  }

  .video-modal-container.open {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  .close-modal {
    position: absolute;
    top: 0px;
    right: 10px;
    color: #fff;
    font-size: 20px;
    cursor: pointer;
    z-index:21;
  }


  @media only screen and (max-width: 992px) {
  #heroVideo, .modal-video{
    height:auto;
  }

     .modal-video {
    width: 90%;
    height: 90%;
    margin: 10% auto;
    display: block;
  }

    

    .video-modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform:translate(-50%, -50%);
    width: 100%;
    height:100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 3;
  }



}
</style>

<script defer>

  const heroVideo = document.getElementById("heroVideo");
  //const modalVideo = document.getElementsByClassName("modal-video")[0];

  

  document.getElementById("video-modal").addEventListener('click', function(e){
    if(e.target.id == "video-modal"){
      closeVideoModal()
    }
  })

   function openVideoModal() {
    var modal = document.getElementById('video-modal');
    var videoModalContainer = document.getElementsByClassName('video-modal-container')[0];
    videoModalContainer.classList.add('open');
    modal.classList.add('open');
    document.body.classList.add('modal-open');
    
    // Play the modal video when the modal is opened
    var modalVideo = document.querySelector('.modal-video');
    modalVideo.play();   
    heroVideo.pause();
  }

  function closeVideoModal() {
    var modal = document.getElementById('video-modal');
    var videoModalContainer = document.getElementsByClassName('video-modal-container')[0];
    videoModalContainer.classList.remove('open');
    modal.classList.remove('open');
    document.body.classList.remove('modal-open');
    
    // Pause the modal video when the modal is closed
    var modalVideo = document.querySelector('.modal-video');
    modalVideo.pause();
    heroVideo.play();
  }

  
  /*
  function openVideoModal() {
    var modal = document.getElementById('video-modal');
    modal.style.display = 'block';
    heroVideo.pause();

    
    //modalVideo.play();
    //document.body.style.opacity = "0.5"
    //document.body.style.overflow = 'hidden';
  }

  function closeVideoModal() {
    var modal = document.getElementById('video-modal');
    modal.style.display = 'none';
    modalVideo.pause();
    heroVideo.play();
    //document.body.style.overflow = 'auto';
  }
  */
  /*
  function openVideoModal() {
    var modal = document.getElementById('video-modal');
    //modal.style.display = 'block';
    modal.classList.add('open');
    document.body.classList.add('modal-open');
    heroVideo.pause();
    
    // Play the modal video when the modal is opened
    var modalVideo = document.querySelector('.modal-video');
    modalVideo.play();
  }

  function closeVideoModal() {
    var modal = document.getElementById('video-modal');
    //modal.style.display = 'none';
    modal.classList.remove('open');
    document.body.classList.remove('modal-open');
    heroVideo.play();
    // Pause the modal video when the modal is closed
    var modalVideo = document.querySelector('.modal-video');
    modalVideo.pause();
  }
*/

  
 
</script>










{% comment %}
  Add the following code at the top of your "custom_hero_section.liquid" file.
{% endcomment %}

{% schema %}
{
  "name": "Custom Hero Section",
  "settings": [
    {
      "type": "text",
      "label": "Video Source (MP4)",
      "id": "video_source",
      "default": "https://designsupply-web.com/samplecontent/vender/codepen/20181014.mp4",
      "info": "Enter the video URL for the background. Make sure it's set to loop, muted, and autoplay."
    },
    {
      "type": "text",
      "label": "CTA Button 1 Text",
      "id": "cta_button_1_text",
      "default": "Learn More",
      "info": "Enter the text for CTA button 1."
    },
    {
      "type": "url",
      "label": "CTA Button 1 Href",
      "id": "cta_button_1_href",
      "default": "/",
      "info": "Enter the URL for CTA button 1."
    },
    {
      "type": "text",
      "label": "CTA Button 2 Text",
      "id": "cta_button_2_text",
      "default": "Shop Now",
      "info": "Enter the text for CTA button 2."
    },
    {
      "type": "url",
      "label": "CTA Button 2 Href",
      "id": "cta_button_2_href",
      "default": "/",
      "info": "Enter the URL for CTA button 2."
    },
    {
      "type": "text",
      "label": "Header Input Placeholder",
      "id": "header_input_placeholder",
      "default": "Header Text",
      "info": "Enter the placeholder text for the header input."
    },
    {
      "type": "range",
      "label": "Height Adjustment",
      "id": "height_adjustment",
      "min": 200,
      "max": 1200,
      "step": 10,
      "default": 600,
      "info": "Adjust the height of the hero section. Note: Video will maintain full width."
    }
  ],
  "presets": [
    {
      "name": "Custom Hero Section",
      "category": "Custom"
    }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "Header Input",
      "settings": [
        {
          "type": "text",
          "label": "Placeholder",
          "id": "header_input_placeholder",
          "default": "Header Text"
        }
      ]
    }
  ]
}
{% endschema %}

